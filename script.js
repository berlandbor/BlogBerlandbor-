document.addEventListener("DOMContentLoaded", async () => {
    const postFiles = [
        "posts/1.txt",
        "posts/2.txt",
        "posts/3.txt",
        "posts/4.txt"
    ]; // –°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π

    const postsPerPage = 1; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    let currentPage = 1;
    let allPosts = []; // –•—Ä–∞–Ω–∏—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏

    const blogContainer = document.getElementById("blog");
    const tocContainer = document.getElementById("toc"); // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ–≥–ª–∞–≤–ª–µ–Ω–∏—è
    const prevButton = document.getElementById("prevPage");
    const nextButton = document.getElementById("nextPage");
    const pageNumber = document.getElementById("pageNumber");
    const searchInput = document.getElementById("searchInput");

    // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–µ–π –≤ –º–∞—Å—Å–∏–≤
    async function loadAllPosts() {
        allPosts = []; // –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
        for (const file of postFiles) {
            try {
                const response = await fetch(file);
                if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${file}`);
                const text = await response.text();

                const lines = text.split("\n");
                const title = lines[0].trim();
                const date = lines[1].trim();
                const content = lines.slice(2).join("\n");

                allPosts.push({ title, date, content, file });
            } catch (error) {
                console.error(error);
            }
        }
        generateTOC(); // –û–±–Ω–æ–≤–ª—è–µ–º –æ–≥–ª–∞–≤–ª–µ–Ω–∏–µ
        checkURLForArticle(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –Ω—É–∂–Ω—É—é —Å—Ç–∞—Ç—å—é
        displayPosts(); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞—Ç—å–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    }

    // –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –æ–≥–ª–∞–≤–ª–µ–Ω–∏—è
    function generateTOC() {
        tocContainer.innerHTML = "<ul>";

        allPosts.forEach((post, index) => {
            const postId = `post-${index}`; // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Å—Ç–∞—Ç—å–∏
            tocContainer.innerHTML += `<li><a href="?article=${index}">${post.title}</a></li>`;
        });

        tocContainer.innerHTML += "</ul>";
    }

    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –≤–≤–µ—Ä—Ö –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü
    function scrollToTop() {
        window.scrollTo({ top: 0, behavior: "smooth" });
    }

    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–µ–π (—É—á–∏—Ç—ã–≤–∞–µ—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏—é –∏ –ø–æ–∏—Å–∫)
    function displayPosts() {
        blogContainer.innerHTML = ""; // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Å—Ç–∞—Ç—å–∏

        const searchQuery = searchInput.value.toLowerCase(); // –ó–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞
        const filteredPosts = allPosts.filter(post =>
            post.title.toLowerCase().includes(searchQuery) ||
            post.content.toLowerCase().includes(searchQuery)
        ); // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å–æ–≤–ø–∞–¥–∞—é—â–∏–µ —Å—Ç–∞—Ç—å–∏

        const totalPages = Math.ceil(filteredPosts.length / postsPerPage); // –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–ª-–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
        const startIndex = (currentPage - 1) * postsPerPage;
        const endIndex = startIndex + postsPerPage;
        const pagePosts = filteredPosts.slice(startIndex, endIndex); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω—É–∂–Ω—ã–µ —Å—Ç–∞—Ç—å–∏

        for (let i = 0; i < pagePosts.length; i++) {
            const post = pagePosts[i];
            const articleId = `post-${i}`;
            const article = document.createElement("div");
            article.classList.add("post");
            article.id = articleId;
            article.innerHTML = `
                <h2>${post.title}</h2>
                <p><small>${post.date}</small></p>
                <p>${post.content.replace(/\n/g, "<br>")}</p>
                <p><a href="?article=${i}" class="share-link">üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—å—é</a></p>
                <hr>
            `;
            blogContainer.appendChild(article);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        pageNumber.textContent = `–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${currentPage}`;
        prevButton.disabled = currentPage === 1;
        nextButton.disabled = currentPage >= totalPages;

        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–≤–µ—Ä—Ö –ø—Ä–∏ —Å–º–µ–Ω–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        scrollToTop();
    }

    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ URL –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å—Ç–∞—Ç—å–∏
    function checkURLForArticle() {
        const params = new URLSearchParams(window.location.search);
        if (params.has("article")) {
            const articleIndex = parseInt(params.get("article"));
            if (!isNaN(articleIndex) && articleIndex >= 0 && articleIndex < allPosts.length) {
                currentPage = articleIndex + 1;
                displayPosts();
            }
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞
    function searchPosts() {
        currentPage = 1; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        displayPosts(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å—Ç–∞—Ç—å–∏
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
    prevButton.addEventListener("click", () => {
        if (currentPage > 1) {
            currentPage--;
            displayPosts();
        }
    });

    nextButton.addEventListener("click", () => {
        const totalPages = Math.ceil(allPosts.length / postsPerPage);
        if (currentPage < totalPages) {
            currentPage++;
            displayPosts();
        }
    });

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç—å–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    loadAllPosts();
    window.searchPosts = searchPosts; // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–æ—Å—Ç—É–ø–Ω–æ–π –≤ `oninput`
});